{"version":3,"sources":["components/categories.ts","firebase.tsx","components/NavItem.tsx","components/Navbar.tsx","components/Loader.tsx","components/PendingOrders.tsx","components/Form.tsx","components/Menu.tsx","components/Home.tsx","components/items.ts","components/ItemsDisplay.tsx","components/Kitchen.tsx","components/Item.tsx","components/Cart.tsx","App.tsx","index.tsx"],"names":["categories","name","imgUrl","process","firebaseConfig","apiKey","REACT_APP_FIREBASE_API","authDomain","REACT_APP_FIREBASE_AUTHDOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECTID","storageBucket","REACT_APP_FIREBASE_STORAGEBUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGINGSENDERID","appId","REACT_APP_FIREBASE_APPID","app","initializeApp","NavItem","props","to","link","text","Navbar","Loader","className","PendingOrders","orders","loading","loadingOrder","validSession","pendingOrders","useState","seconds","setSeconds","React","sumOfOrders","setSumOfOrders","useEffect","timer","secondsNum","Math","floor","Date","now","interval","setInterval","clearInterval","sumOrdersCopy","length","Object","keys","map","key","forEach","item","itemId","id","itemQuan","quantity","itemName","pending","filteredItem","filter","itemCopy","currItem","error","console","order","index","timeDifference","orderedAt","a","b","timeDif","minutesString","toString","secondsString","Form","label","setValidSession","globalTableId","setGlobalTableId","tableId","setTableId","disableBtn","setDisableBtn","test","validLabel","type","minLength","maxLength","onChange","e","currentTarget","value","onClick","preventDefault","inputId","localStorage","setItem","log","disabled","require","Menu","category","style","backgroundImage","toLowerCase","Home","items","alt","price","concat","ItemsDisplay","match","params","filteredItems","Kitchen","setLoading","setOrders","ordersArray","setOrdersArray","completeOrder","uid","target","getAttribute","slice","orderId","db","getDatabase","arr","filteredOrder","indexOf","update","ref","docRef","onValue","snapshot","data","val","ordersArr","tableID","orderID","Item","cart","setCart","setQuantity","modifyQuantity","modifyType","returnFilteredItem","filteredCart","newQuan","Cart","totalPrice","setTotalPrice","modifyCart","sum","reduce","prev","current","dollarsToCents","centsToDollars","itemPrice","newCart","removeItemFromCart","timeNowSeconds","cartCopy","newOrderKey","push","child","set","firebasePush","input","charAt","decimalPos","includes","dollars","parseInt","centsString","cents","Number","isInteger","App","setLoadingOrder","setPendingOrders","setPastOrders","retrievedSession","getItem","clear","tableIdstring","cartJSONString","JSON","parse","retrieveSession","stringify","past","orderArray","filteredPending","filteredPast","table","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5c2532d.chunk.js","sourcesContent":["// This file contains the categories that are shown on the Home page once a valid table ID has been entered.\n\nexport interface Category {\n    name: string,\n    imgUrl: string\n}\n\nconst categories: Category[] = [\n    {\n        name: \"Meat\",\n        imgUrl: \"./img/meat.jpg\",\n    },\n    {\n        name: \"Soup\",\n        imgUrl: \"./img/soup.jpg\",\n    },\n    {\n        name: \"Sides\",\n        imgUrl: \"./img/sides.jpg\",\n    },\n    {\n        name: \"Dessert\",\n        imgUrl: \"./img/dessert.jpeg\",\n    },\n    {\n        name: \"Drinks\",\n        imgUrl: \"./img/drinks.\",\n    },\n]\n\nexport {categories};","// import firebase from \"firebase/compat/app\";\nimport { initializeApp } from 'firebase/app';\n\n\n\nconst { REACT_APP_FIREBASE_API, REACT_APP_FIREBASE_AUTHDOMAIN, REACT_APP_FIREBASE_DATABASE_URL, REACT_APP_FIREBASE_PROJECTID, REACT_APP_FIREBASE_STORAGEBUCKET, REACT_APP_FIREBASE_MESSAGINGSENDERID, REACT_APP_FIREBASE_APPID } = process.env;\n\nconst firebaseConfig = {\n    apiKey: REACT_APP_FIREBASE_API,\n    authDomain: REACT_APP_FIREBASE_AUTHDOMAIN,\n    databaseURL: REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: REACT_APP_FIREBASE_PROJECTID,\n    storageBucket: REACT_APP_FIREBASE_STORAGEBUCKET,\n    messagingSenderId: REACT_APP_FIREBASE_MESSAGINGSENDERID,\n    appId: REACT_APP_FIREBASE_APPID\n};\n\n// firebase.initializeApp(firebaseConfig);\nconst app = initializeApp(firebaseConfig);\n\nexport default app;\n\n// export default firebase;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  link: string,\n  text?: string\n}\n\nfunction NavItem(props: Props){\n  return (\n    <Link to={props.link}>\n        <li>{props.text}</li>\n    </Link>\n    // <Link to='/menu/meat/'>Hello?</Link>\n  );\n}\n\nexport default NavItem;\n","import React from 'react';\n\nimport NavItem from './NavItem';\n\nfunction Navbar() {\n  \n  return (\n    <nav>\n      <ul>\n      <NavItem link='/table' text=\"Table\"></NavItem>\n      <NavItem link='/menu' text=\"Menu\"></NavItem>\n      <NavItem link='/cart' text=\"Cart\"></NavItem>\n      <NavItem link='/orders' text=\"Orders\"></NavItem>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nfunction Loader(){\n    return (\n        <div className=\"card\">\n            <div className=\"loader\">\n                <div className=\"spin\"></div>\n\t\t        <div className=\"bounce\"></div>\n            </div>\n        </div>\n    );\n}\n\nexport default Loader;","import React, { useState, useEffect } from 'react';\nimport { CartItemObj } from './Item';\nimport Loader from './Loader';\n\ninterface Props {\n  orders: any,\n  loading: boolean,\n  loadingOrder: boolean,\n  pendingOrders: any,\n  validSession: boolean,\n}\n\ninterface SumOrders {\n  id: string,\n  name: string,\n  quantity: number,\n}\n\nexport function PendingOrders(props: Props) {\n  const { orders, loading, loadingOrder, validSession, pendingOrders } = props;\n  const [seconds, setSeconds] = useState(0);\n  const [sumOfOrders, setSumOfOrders] = React.useState<Array<SumOrders>>([])\n\n  useEffect(() => {\n    function timer(){\n      const secondsNum = Math.floor(Date.now()/1000);\n      setSeconds(secondsNum);\n    }\n    timer();\n    let interval = setInterval(() => timer(), 1000)\n    return () => {\n      clearInterval(interval);\n    }\n  }\n  , [])\n\n  useEffect(() => {\n    let sumOrdersCopy: SumOrders[] = [];\n    try {\n      if(!(orders === null || orders.length === 0)){\n        Object.keys(orders).map((key: string) => {\n          const orderArray: Array<CartItemObj> = orders[key];\n          orderArray.forEach(item => {\n            const itemId = item.id;\n            const itemQuan = item.quantity;\n            const itemName = item.name;\n            if(item.pending === true){\n              let filteredItem = sumOrdersCopy.filter(itemCopy => itemCopy.id === itemId);\n            if(filteredItem.length === 0){\n              sumOrdersCopy = [...sumOrdersCopy, {id: itemId, quantity: itemQuan, name: itemName}];\n            }else{\n              sumOrdersCopy = sumOrdersCopy.map(currItem => currItem.id === itemId ? {...currItem, quantity: currItem.quantity + itemQuan,} : currItem)\n            }\n            setSumOfOrders(sumOrdersCopy);\n            }\n          })\n        })\n      }\n    }\n    catch(error){\n      console.error(error);\n    }\n  }, [orders])\n\n  if(!validSession) return <div>Enter a table to get started!</div>\n  if(loading || loadingOrder || seconds === 0) return <Loader/>;\n  if(orders === null) return <div>You currently have no pending orders!</div>;\n\n  return (\n    <div>\n      <div>Orders: </div>\n      {Object.keys(orders).map((key: string) => {\n        const orderArray: Array<CartItemObj> = orders[key];\n        return orderArray.map((order, index) => {\n          if(order.pending){  \n            return (\n              <div key={index}>\n                <div>{order.name}</div>\n                <div>{order.quantity}</div>\n                <div>{timeDifference(seconds, order.orderedAt!)}</div>\n                <div>__________________</div>\n              </div>\n            )\n          }else{\n            return null;\n          }\n        })\n      })}\n      {sumOfOrders.map((item,index) => <div key={index}><span>{item.quantity}</span><span> - {item.name}</span></div>)}\n    </div>\n  );\n}\n\nexport function timeDifference(a:number, b:number){\n  let timeDif = a - b;\n  if(timeDif >= 6000) return '99:99';\n  const minutes = Math.floor(timeDif/60);\n  const minutesString = minutes.toString(10); \n  const seconds = timeDif % 60;\n  let secondsString = seconds.toString(10);\n  if(seconds < 10){\n    secondsString = `0${seconds}`;\n  }\n  return minutesString + ':' + secondsString;\n}\n\n\n","import React, { useEffect, useState } from 'react';\n\ninterface Props {\n    label: string,\n    setValidSession: Function,\n    globalTableId?: string,\n    setGlobalTableId: Function,\n    validSession?: boolean,\n}\nfunction Form(props: Props) {\n    const { label, validSession, setValidSession, globalTableId, setGlobalTableId } = props;\n    const [tableId, setTableId] = useState('');\n    const [disableBtn, setDisableBtn] = useState(true);\n\n    useEffect(() => {\n        const regex = /^[a-zA-Z0-9]{4}$/;\n        if(regex.test(tableId)){\n            setDisableBtn(false);\n        }\n        else{\n            setDisableBtn(true);\n        }\n    }, [tableId])\n\n    function onChangeHandler(e: React.FormEvent<HTMLInputElement>){\n        setTableId(e.currentTarget.value);\n    }\n    \n    function JoinTable(e: React.MouseEvent){\n        e.preventDefault();\n        const inputId = tableId;\n        // check if tableId has number and alphabets only and len = 4 (allow lowercase)\n        const regex = /^[a-zA-Z0-9]{4}$/;\n        if(regex.test(inputId)){\n            setValidSession(true);\n            localStorage.setItem('tableId', inputId);\n            localStorage.setItem('sessionTimeStamp', Date.now().toString(10));\n            setGlobalTableId(tableId);\n        }\n        else{\n            console.log('incorrect table id');\n        }\n    }\n  \n    const validLabel = 'Current Table: ' + globalTableId;\n\n    return (\n      <form>\n          <label>{validSession ? validLabel : label}</label>\n          <input type=\"text\" minLength={4} maxLength={4} onChange={onChangeHandler} value={tableId} />\n          <button onClick={JoinTable} disabled={disableBtn}>{validSession ? 'Change Table' : 'Join Table'}</button>\n      </form>\n    );\n}\n  \nexport default Form;","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DiagnosticCategory } from 'typescript';\nimport  { Category } from \"./categories\";\nconst { categories } = require(\"./categories\");\n\n\nfunction Menu() {\n\n    return (\n        <div className='menu-grid'>\n            {categories.map((category: Category, index: number) => {\n                return (\n                    <div className='grid-item' style={{backgroundImage: `url(${category.imgUrl})`}}>\n                        <Link key={index} to={`/menu/${category.name.toLowerCase()}`}>\n                            {category.name}\n                        </Link>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default Menu;","import React from 'react';\nimport Form from './Form';\nimport Menu from './Menu';\n\n\ninterface Props {\n    setGlobalTableId: Function,\n    validSession: boolean,\n    setValidSession: Function,\n    loading: boolean,   \n}\n\nfunction Home(props: Props) {\n    const { setGlobalTableId, validSession, setValidSession, loading } = props;\n    \n    if(loading){\n        return (\n            <div>\n                Loading.... \n            </div>\n        )\n    }\n\n    return (\n        <div>\n            {validSession ? \n            <Menu/> : \n            <Form label=\"Enter your 4 Digit Table ID to get Started!\" setValidSession={setValidSession} setGlobalTableId={setGlobalTableId}></Form>}\n        </div>\n    );\n}\n\n\n\n\nexport default Home;","// Item information\n\nexport interface ItemInterface {\n    category: string,\n    id: string,\n    name: string,\n    imgUrl: string,\n    price: string,\n    alt?: string\n}\nconst meats: ItemInterface[] = [\n    {\n        category: 'Meat',\n        name: \"A5 Wagyuu\",\n        id: '10',\n        alt: 'A5 juicy wagyuu beef',\n        imgUrl: \"#\",\n        price: '$123.00',\n    },\n    {\n        category: 'Meat',\n        name: \"Pork Belly\",\n        id: '11',\n        imgUrl: \"#\",\n        price: '$10.00',\n    },\n    {\n        category: 'Meat',\n        name: \"Beef tongue\",\n        id: '12',\n        imgUrl: \"#\",\n        price: '$12.00',\n    },\n]\n\nconst soups: ItemInterface[] = [\n    {\n        category: 'Soup',\n        name: \"Spicy Soup Base\",\n        id: '51',\n        imgUrl: \"#\",\n        price: '$16.00',\n    },\n    {\n        category: 'Soup',\n        name: \"Chicken Broth Soup Base\",\n        id: '52',\n        imgUrl: \"#\",\n        price: '$15.00',\n    },\n]\n\nconst drinks: ItemInterface[] = [\n    {\n        category: 'Drinks',\n        name: \"Coke\",\n        id: '101',\n        imgUrl: \"#\",\n        price: '$2.50',\n    },\n]\nconst items: ItemInterface[] = meats.concat(soups, drinks);\n\nexport {items};","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { RouteComponentProps } from 'react-router';\nimport  { items, ItemInterface } from \"./items\";\n\ninterface MatchParams {\n    category: string;\n}\n\ninterface Props extends RouteComponentProps<MatchParams> { };\n\n\nfunction ItemsDisplay(props: Props) {\n    const { category } = props.match.params;\n    const filteredItems = items.filter(item => item.category.toLowerCase() === category.toLowerCase());\n\n    return (\n        <div>\n            <Link to='/'><button>Back</button></Link>\n            {filteredItems.map((item:ItemInterface, index) => {\n                return (\n                    <Link key={index} to={`/menu/${category}/${item.id}`}>{item.name}</Link>    \n                );\n            })}\n        </div>\n    );\n}\n\nexport default ItemsDisplay;","import React, { useState, useEffect } from 'react';\nimport app from \"../firebase\";\nimport { getDatabase, ref, onValue, set, update } from 'firebase/database';\nimport { timeDifference } from './PendingOrders';\n\ninterface OrdersArray {\n    [key: string]: Array<Order>;\n}\n\ninterface Order{\n    id: string,\n    uid?: string,\n    tableId: string,\n    name: string,\n    quantity: number,\n    orderedAt: number,\n    pending: boolean,\n    price: string,\n}\n\nfunction Kitchen() {\n    const [loading, setLoading] = useState(true);\n    const [orders, setOrders] = useState(null);\n    const [ordersArray, setOrdersArray] = React.useState<Array<Order>>([]);\n    const [seconds, setSeconds] = useState(0);\n\n    useEffect(() => {\n        // Start timer\n        function timer(){\n            const secondsNum = Math.floor(Date.now()/1000);\n            setSeconds(secondsNum);\n        }\n        timer();\n        let interval = setInterval(() => timer(), 1000)\n\n        // Get data from firebase\n        const db = getDatabase(app);\n        const docRef = ref(db, `tables/`);\n        onValue(docRef, (snapshot) => {\n            const data = snapshot.val();\n            console.log(data)\n            if(data === null){\n                setLoading(false);\n            }\n            setOrders(data);\n        })\n\n        return () => {\n            clearInterval(interval);\n        }\n    }, [])\n\n    // data structure for orders: tables/*tableId*/orders/*orderId*/ArrayOfOrders/Item\n    // listed elements are tracked by combining: tableId(4) + orderId(20) + itemId(varying len) \n    useEffect(() => {\n        if(orders != null){\n            setLoading(false);\n            let ordersArr: Order[] = [];\n            Object.keys(orders).map((tableID: string) => {\n                const ordersArray: OrdersArray = orders[tableID]['orders'];\n                Object.keys(ordersArray).map((orderID: string) => {\n                    ordersArray[orderID].forEach(item => {\n                        if(item.pending){\n                            item.tableId = tableID;\n                            item.uid = tableID + orderID + item.id;\n                            ordersArr = ordersArr === null ? [item] : [...ordersArr, item];\n                        }\n                    })\n                })\n            })\n            setOrdersArray(ordersArr);\n            console.log(ordersArr);\n        }\n    }, [orders])\n\n    function completeOrder(e: any){\n        try{\n            const uid = e.target.getAttribute('data-key');\n            // split unique id into tableId, orderId and itemId\n            const tableId = uid.slice(0, 4);\n            const orderId = uid.slice(4, 24);\n            const itemId = uid.slice(24, uid.length);\n            const db = getDatabase(app);\n            // set the pending status as false for that specific item in the order\n            if(orders != null){\n                let ordersObj = orders;\n                const arr: Array<Order> = ordersObj[tableId]['orders'][orderId];\n                const filteredOrder = arr.filter(item => item.id === itemId)[0];\n                const index = arr.indexOf(filteredOrder);\n                //set(ref(db, `tables/${tableId}/orders/${orderId}/${index}`), {...filteredOrder, pending: false})\n                update(ref(db, `tables/${tableId}/orders/${orderId}/${index}`), {pending: false})\n            }\n        }catch(error){\n            console.error(error);\n        }\n    }\n\n    if(loading || seconds === 0){\n        return <div>Loading...</div>\n    }\n    return (\n        <div>\n            {ordersArray.map(order => {\n                return (\n                    <div key={order.uid}>\n                        <span>{order.name}</span>\n                        <span> ---- {order.quantity}</span>\n                        <span> ---- {order.tableId}</span>\n                        <span> ---- {timeDifference(seconds, order.orderedAt!)}</span>\n                        <button onClick={completeOrder} data-key={order.uid}>Completed</button>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default Kitchen;","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { RouteComponentProps } from 'react-router';\nimport  { items } from \"./items\";\n\n\n\ninterface MatchParams {\n    category: string;\n    id: string;\n}\n\nexport interface CartItemObj {\n    id: string,\n    quantity: number,\n    name: string,\n    price: string,\n    imageUrl?: string,\n    pending?: boolean,\n    orderedAt?: number,\n}\n\ninterface Props extends RouteComponentProps<MatchParams> { \n    cart: Array<CartItemObj>,\n    setCart: Function,\n};\n\nfunction Item(props: Props) {\n    const { id, category } = props.match.params;\n    const { cart, setCart } = props;\n    const [ quantity, setQuantity ] = useState(0);\n\n    function modifyQuantity(modifyType:string){\n        if(modifyType === 'plus'){\n            setQuantity(quantity + 1);\n        }\n        else if(modifyType === 'minus' && quantity <= 0){\n            return;\n        }\n        else if(modifyType === 'minus') {\n            setQuantity(quantity - 1);\n        }\n    }\n\n    // returns an object with the item's info \n    function returnFilteredItem(itemId: string){\n        const filteredItem = items.filter(item => item.id === itemId);\n        if(filteredItem.length === 0){\n            console.log('cannot find item');\n            return null;\n        }\n        else if(filteredItem.length > 1){\n            console.log('duplicate items');\n            return null;\n        }\n        else{\n            return filteredItem[0];\n        }\n    }    \n\n    function addToCart(){\n        if(quantity === 0) return;\n        // check if cart has our item or if we're adding a new item\n        const filteredCart = cart.filter(item => item.id === id);\n\n        if(filteredCart.length > 0){ // item exists in cart\n            const newQuan = filteredCart[0].quantity + quantity;\n            setCart([...cart].map(item => item.id === id ? {...item, quantity: newQuan, name: filteredItem!.name, price: filteredItem!.price} : item));\n        }\n        else { // item does not exist in cart\n            setCart(cart.concat({id: id, quantity: quantity, name: filteredItem!.name, price: filteredItem!.price})); \n        }\n    }\n\n    let filteredItem = returnFilteredItem(id);\n\n    if(filteredItem === null) return null;\n\n    return (\n        <div>\n            <Link to={`/menu/${category}`}><button>Back</button></Link>\n            <div>\n                <div>{filteredItem === null ? null : filteredItem.name}</div>\n                <div>{filteredItem === null ? null : filteredItem.price}</div>\n                <button onClick={() => modifyQuantity('minus')}>-</button>\n                <span>Quantity: {quantity}</span>\n                <button onClick={() => modifyQuantity('plus')}>+</button>\n                <button onClick={addToCart} disabled={quantity === 0}>Add to cart</button>\n            </div>\n        </div>\n    );\n}\n\n\nexport { Item };","import React, { useState, useEffect } from 'react'\nimport { CartItemObj } from \"./Item\";\n\nimport app from '../firebase';\nimport { getDatabase, ref, set, child, push } from 'firebase/database';\n\n\ninterface Props { \n    cart: Array<CartItemObj>,\n    setCart: Function,\n    validSession: boolean,\n    globalTableId: string,\n};\n\n\nexport function Cart(props: Props) {\n    const { cart, setCart, validSession, globalTableId } = props;\n    const [totalPrice, setTotalPrice] = useState('');\n\n    useEffect(() => {\n        // recalcualte cart total whenever it updates\n        let initialValue = 0;\n        let sum = cart.reduce((prev, current) => {\n            const currentValue = dollarsToCents(current.price) * current.quantity;\n            return prev + currentValue;\n        }, initialValue);\n        setTotalPrice(centsToDollars(sum));\n    }, [cart])\n\n    // allows direct modification of cart\n    function modifyCart(modifyType: string, itemId: string){\n        let newQuan = cart.filter(item =>  item.id === itemId)[0].quantity;\n\n        if(newQuan <= 1 && modifyType === 'minus') return;\n        if(modifyType === 'plus'){\n            newQuan++;\n        } else if(modifyType === 'minus'){\n            newQuan--;\n        }\n        setCart([...cart].map(item => item.id === itemId ? {...item, quantity: newQuan} : item));\n    }\n\n    function removeItemFromCart(itemId: string){\n        let newCart = [...cart];\n        newCart = newCart.filter(item =>  item.id !== itemId);\n        setCart(newCart);\n    }\n\n    function processOrder(){\n        if(!validSession){\n            return;\n        }\n        let timeNowSeconds: number = Math.floor(Date.now()/1000);\n\n        let cartCopy = [...cart];\n        cartCopy = cartCopy.map(order => {\n            return {...order, pending: true, orderedAt: timeNowSeconds}\n        })\n        console.log(cartCopy);\n        firebasePush(cartCopy);\n        setCart([]);\n\n        function firebasePush(cart: Array<CartItemObj>){\n            // https://firebase.google.com/docs/database/web/read-and-write\n            const db = getDatabase(app);\n            const newOrderKey = push(child(ref(db), 'tables/tableId/orders/')).key; // create new key\n            set(ref(db, `tables/${globalTableId}/orders/${newOrderKey}`), cart);\n        }\n    }\n\n    return (\n        <div>\n            {cart.map((item, index) => {\n                let itemPrice = dollarsToCents(item.price);\n                return(\n                    <div key={index}>\n                        <div>{item.name}</div>\n                        <div>{item.price}</div>\n                        <div>\n                            <button onClick={() => modifyCart('minus', item.id)} disabled={item.quantity === 1}>-</button>\n                            <div>Quantity: {item.quantity}</div>\n                            <button onClick={() => modifyCart('plus', item.id)}>+</button>\n                        </div>\n                        <button onClick={() => removeItemFromCart(item.id)}>Remove Item</button>\n                        <div>{centsToDollars(itemPrice*item.quantity)}</div>\n                    </div>\n                )\n            })}\n            <div>\n                <div>Total: {totalPrice}</div>\n                <div>Table: {globalTableId}</div>\n                <button onClick={processOrder} disabled={!validSession}>Order</button>\n                {validSession ? null : <div>Enter a table before ordering!</div>}\n            </div>\n        </div>\n    );\n}\n\n// takes an input (e.g. '$5.99' or '5.99') and turns it into a number (cents)\nexport function dollarsToCents(input: string){\n    if(input.charAt(0) === '$'){\n        input = input.slice(1);\n    }\n\n    let decimalPos = -1;\n    if(input.includes('.')){\n        decimalPos = input.indexOf('.');\n        const dollars = parseInt(input.slice(0, decimalPos), 10);\n\n        const centsString = input.slice(decimalPos + 1);\n        let cents = null;\n        if(centsString.length === 1){\n            cents = parseInt(input.slice(decimalPos + 1), 10);\n            return dollars * 100 + cents * 10;\n        }else if(centsString.length === 2){\n            cents = parseInt(input.slice(decimalPos + 1), 10);\n        }\n\n        return dollars * 100 + cents!;\n    }else {\n        return parseInt(input, 10) * 100;\n    }\n}\n\n// takes an amount in cents and outputs that as a string in $\nexport function centsToDollars(input: number){\n    if(Number.isInteger(input) === false) return '';\n    let cents = input % 100;\n    let centsString = cents.toString(10);\n    if(cents < 10){\n        centsString = `0${cents}`;\n    }\n    let dollars = Math.floor(input/100);\n    return `$${dollars}.${centsString}`\n}","import React, { useState, useEffect } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nimport app from \"./firebase\";\nimport { getDatabase, ref, onValue } from 'firebase/database';\n\nimport './styles/style.css';\nimport Navbar from './components/Navbar'\nimport { PendingOrders } from './components/PendingOrders';\nimport Home from './components/Home';\nimport ItemsDisplay from './components/ItemsDisplay';\nimport Menu from './components/Menu';\nimport Form from './components/Form';\nimport Kitchen from './components/Kitchen';\nimport { Item, CartItemObj } from './components/Item';\nimport { Cart } from './components/Cart';\n\n\nfunction App() {\n  const [globalTableId, setGlobalTableId] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [loadingOrder, setLoadingOrder] = useState(true);\n  const [orders, setOrders] = useState(null);\n  const [pendingOrders, setPendingOrders] = React.useState<Array<CartItemObj>>([])\n  const [pastOrders, setPastOrders] = React.useState<Array<CartItemObj>>([])\n  const [cart, setCart] = useState([]);\n  const [validSession, setValidSession] = useState (false);\n\n  // check localStorage for a valid session\n  function retrieveSession(){\n    const retrievedSession = localStorage.getItem('sessionTimeStamp');\n    if(retrievedSession === null){\n        localStorage.clear();\n    }\n    else{\n        const timeNow = Date.now();\n        const lastEntered = parseInt(retrievedSession);\n        if(timeNow - lastEntered < 3.6e+6){\n            setValidSession(true);\n            const tableIdstring = localStorage.getItem('tableId');\n            if(tableIdstring != null) setGlobalTableId(tableIdstring);\n            let cartJSONString = localStorage.getItem('cart');\n            if(cartJSONString != null){\n              setCart(JSON.parse(cartJSONString));\n            }\n        }\n    }\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    retrieveSession();\n  }, [])\n\n  useEffect(() => {\n    // whenever cart gets updated, update the localStorage cart too, so it persists\n    let cartJSONString = JSON.stringify(cart);\n    localStorage.setItem('cart', cartJSONString);\n  }, [cart]);\n\n  useEffect(() => {\n    if(validSession === true && globalTableId !== ''){ \n      const db = getDatabase(app);\n      const docRef = ref(db, `tables/${globalTableId}/orders`);\n      onValue(docRef, (snapshot) => {\n      const data = snapshot.val();\n      setOrders(data);\n      if(data === null){setLoadingOrder(false)};\n      })\n    }\n  }, [validSession, globalTableId])\n\n  useEffect(() => {\n    if(orders != null){\n      setLoadingOrder(false)\n      let pending: Array<CartItemObj> = [];\n      let past: Array<CartItemObj> = [];\n      Object.keys(orders).map((key: string) => {\n        const orderArray: Array<CartItemObj> = orders[key];\n        const filteredPending = orderArray.filter((order) => order.pending === true);\n        pending = pending.concat(filteredPending)\n        const filteredPast = orderArray.filter((order) => order.pending === false);\n        past = past.concat(filteredPast);\n      })\n      setPendingOrders(pending);\n      console.log('pending');\n      console.table(pending)\n      setPastOrders(past);\n      console.log('past');\n      console.table(past)\n    }\n\n  }, [orders])\n\n  return (\n    <div className='app'>\n      <HashRouter basename='/'>\n      <Navbar/>\n        <div className='main-content'>\n        <Switch>\n          <Route exact path =\"/\" component={() => <Home setGlobalTableId={setGlobalTableId} validSession={validSession} setValidSession={setValidSession} loading={loading}/>}/>\n          <Route path =\"/menu/:category/:id\" component={(props: any) => <Item {...props} cart={cart} setCart={setCart}/>}/>\n          <Route path =\"/menu/:category\" component={ItemsDisplay}/>\n          <Route path =\"/menu\" component={Menu}/>\n          <Route path = \"/table\" component={() => <Form label=\"Enter your 4 Digit Table ID to get Started!\" validSession={validSession} setValidSession={setValidSession} globalTableId={globalTableId} setGlobalTableId={setGlobalTableId}></Form>}/>\n          <Route exact path=\"/cart\" component={() => <Cart cart={cart} setCart={setCart} validSession={validSession} globalTableId={globalTableId}/>}/>\n          <Route exact path=\"/orders\" component={() => <PendingOrders orders={orders} loading={loading} loadingOrder={loadingOrder} pendingOrders={pendingOrders} validSession={validSession}/>}/>\n          <Route exact path=\"/kitchen\" component={Kitchen}/>\n        </Switch>\n        </div>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}